# board.py
# TCNJ Engineering Breadboard Simulator
# v. 0.3
# Mark F. Russo, PhD
# MFR 4/27/2023: Added LMS6DSOX simulator get_accel() method
#                Added SSD1306 methods: rect(), fill_rect(), pixel()
# MFR 1/8/2023 : Fixed flicker on SSD1306_I2C by double-buffering

# Reference
# https://docs.micropython.org/en/latest/rp2/quickref.html

# Import what we need
import sys, os, math, socket, json, base64, random
from io import BytesIO

os.environ['PYGAME_HIDE_SUPPORT_PROMPT'] = '1'
import pygame
from pygame import gfxdraw

# === Shape Classes

# Generic abstract base class
class Shape:
    def __init__(self):
        self._handles_events = False     # True if this shape handles events
        self._filled  = True
        self._stroked = True
    def onmousepressed(self, x, y, but): ...
    def onmousereleased(self, x, y, but): ...
    def onmousemoved(self, x, y, buts): ...

# A pygame Image object
class Image(Shape):
    # x:        image x-location
    # y:        image y-location
    # path:     relative path to the image file
    def __init__(self, x, y, path):
        Shape.__init__(self)
        self.image = pygame.image.load(path)
        self.rect  = self.image.get_rect()
        self.rect.left = x
        self.rect.top  = y
    
    # Draw the image on the pygame surface
    def draw(self, surface):
        surface.blit(self.image, self.rect)

    # Test if the location (x, y) is within the image
    def contains(self, x, y):
        return self.rect.collidepoint(x, y)

# Text object
class Text(Shape):
    
    def __init__(self, text, x, y, size=18):
        self.x, self.y = x, y
        
# A pygame Circle object
class Circle(Shape):
    # x:            x-center location
    # y:            y-center location
    # radius:       Radius of circle in pixels
    # fill_color:   RGB/A, defaults to white
    # stroke_color: RGB/A, defaults to black
    def __init__(self, x, y, radius, fill_color=(255,255,255), stroke_color=(0,0,0)):
        Shape.__init__(self)
        self.x = x
        self.y = y
        self.radius = radius
        self.fill_color   = fill_color
        self.stroke_color = stroke_color

    # Draw the circle on the surface
    def draw(self, surface):
        if self._filled:  gfxdraw.filled_ellipse(surface, self.x, self.y, self.radius, self.radius, self.fill_color)
        if self._stroked: gfxdraw.aaellipse(surface, self.x, self.y, self.radius, self.radius, self.stroke_color)
        
    # True if given point is in the shape
    def contains(self, x, y):
        dx, dy = self.x - x, self.y - y
        dist = math.sqrt( dx*dx + dy*dy )
        return dist <= self.radius

# A pygame Rectangle object
class Rectangle(Shape):
    # x:            x-location
    # y:            y-location
    # width:        width in pixels
    # height:       height in pixels
    # fill_color:   RGB/A, defaults to white
    # stroke_color: RGB/A, defaults to black
    def __init__(self, x, y, width, height, fill_color=(255,255,255), stroke_color=(0,0,0)):
        Shape.__init__(self)
        self.x, self.y, self.width, self.height = x, y, width, height
        self.fill_color   = fill_color
        self.stroke_color = stroke_color

    # Draw the circle on the surface
    def draw(self, surface):
        if self._filled:  gfxdraw.box(surface, (self.x, self.y, self.width, self.height), self.fill_color)
        if self._stroked: gfxdraw.rectangle(surface, (self.x, self.y, self.width, self.height), self.stroke_color)
    
    # True if given point is in the shape
    def contains(self, x, y):
        if x < self.x: return False
        if y < self.y: return False
        if x > (self.x + self.width): return False
        if y > (self.y + self.height): return False
        return True

# ===   Widgets
#       UI Widgets

# Button simulator
class Button(Circle):
    # x:            x-center location
    # y:            y-center location
    # radius:       Radius of circle in pixels
    # color:        Button color. Defaults to white
    def __init__(self, x, y, radius, color=(255,255,255)):
        Circle.__init__(self, x, y, radius, color)
        self.value = 1      # 1 == off/released
        self._handles_events = True
        self._color = color # off color
        
    # Press the button
    def press(self):
        self.value = 0
        self.fill_color = (200,200,200)
    
    # Release the button
    def release(self):
        self.value = 1
        self.fill_color = self._color
    
    # Test if button is pressed
    def is_pressed(self):
        return self.value == 0
    
    # Handle mouse pressed event
    def onmousepressed(self, x, y, but):
        self.press()

    # Handle mouse released event
    def onmousereleased(self, x, y, but):
        self.release()
    
    # Process command sent to button
    def process(self, cmd):
        if cmd == 'value':
            return {'success':True, 'msg':self.value}
        else:
            return {'success':False, 'msg':f"Command {cmd} not understood by Button at Pin {self.num}"}

# Vertical Slider
class VSlider(Shape):
    def __init__(self, x, y, w, h):
        Shape.__init__(self)
        self._value = 0.0
        self.x, self.y, self.width, self.height = x, y, w, h
        self._handles_events = True     # True if to handle events
        self._dragging = False          # True if currently being dragged
        self._offset = None             # Offset from upper left of button where grabbed
        
        self.body   = Rectangle(x, y, w, h)
        self.body._stroked = False
        self.body._handles_events = False
        
        self.button = Rectangle(x, y+h-w, w, w, fill_color=(255,0,0))
        self.button._stroked = False
        self.button._handles_events = False
    
    # True if given point is in the shape
    def contains(self, x, y):
        # When dragging, we want all mouse events so dragging continues even when mouse strays off shape.
        # A way to make this happen is to always indicate that the mouse is within the shape
        if self._dragging: return True  
        return self.body.contains(x, y)
    
    @property   # getter
    def value(self):
        return self._value
    
    @value.setter
    def value(self, v):
        self._value = v
        self.button.y = self.y + self.height - self._offset[1] - self._value
    
    # Handle mouse pressed event
    def onmousepressed(self, x, y, but):
        # Check if pressed on button
        if self.button.contains(x, y):
            self._offset   = (x - self.button.x, y - self.button.y)
            self._dragging = True
            pygame.mouse.set_cursor(pygame.SYSTEM_CURSOR_HAND)
        
    # Handle mouse released event
    def onmousereleased(self, x, y, but):
        self._dragging = False
        self._offset   = None
        pygame.mouse.set_cursor(pygame.SYSTEM_CURSOR_ARROW)
        
    def onmousemoved(self, x, y, buts):
        if self._dragging:
            self.value = self.height - (y - self.y)
    
    def draw(self, surface):
        self.body.draw(surface)
        self.button.draw(surface)

# ===   Components
#       Component simulators that update pygame surface

# LSM6DSOX simulator 
class LSM6DSOX(Circle):
    # Constructor
    def __init__(self):
        Circle.__init__(self, 860, 60, 50, fill_color=(200,200,200))
        self._ax = self._ay = self._az = 0.0    # Acceleration
        self._handles_events = True             # True if to handle events
        self._dragging = False
        self.button = Circle(860, 60, 6, fill_color=(255,100,100), stroke_color=(255,100,100))
        self.button._stroked = False
        self.button._handles_events = False

    # Handle mouse pressed event
    def onmousepressed(self, x, y, but):
        # Check if pressed on button
        if self.button.contains(x, y):
            self._offset   = (x - self.button.x, y - self.button.y)
            self._dragging = True
            pygame.mouse.set_cursor(pygame.SYSTEM_CURSOR_HAND)
        
    # Handle mouse released event
    def onmousereleased(self, x, y, but):
        self._dragging = False
        self._offset   = None
        pygame.mouse.set_cursor(pygame.SYSTEM_CURSOR_ARROW)
    
    # Handle mouse moved event
    def onmousemoved(self, x, y, buts):
        if self._dragging:
            try:
                self.button.x = x - self._offset[0]
                self.button.y = y - self._offset[1]
                self._ax = max(-1, min(1, (self.button.x - self.x)/50))
                self._ay = -max(-1, min(1, (self.button.y - self.y)/50))
                self._az = 1 - math.sqrt(self._ax*self._ax + self._ay*self._ay)
            except:
                ...
    
    # Return IMU acceleration
    def read_accel(self):
        """Returns acceleration vector in gravity units (9.81m/s^2)."""
        return self._ax, self._ay, self._az
    
    # Return IMU gyro
    def read_gyro(self):
        """Returns gyroscope vector in degrees/sec."""
        x = random.random()*10.0
        y = random.random()*10.0
        z = random.random()*10.0
        return x, y, z
    
    # Process command sent to LSM6DSOX
    def process(self, cmd):
        if cmd['msg'] == 'read_accel':
            ax, ay, az = self.read_accel()
            return {'success':True, 'msg':(ax, ay, az)}
        elif cmd['msg'] == 'read_gyro':
            gx, gy, gz = self.read_gyro()
            return {'success':True, 'msg':(gx, gy, gz)}
        else:
            return {'success':False, 'msg':f"Command {cmd} not understood by LSM6DSOX"}

    def draw(self, surface):
        Circle.draw(self, surface)
        gfxdraw.box(surface, (self.x, self.y-50, 1, 100), (0,0,0))
        gfxdraw.box(surface, (self.x-50, self.y, 100, 1), (0,0,0))
        self.button.draw(surface)

# LED simulator
class LED(Circle):
    # x:            x-center location
    # y:            y-center location
    # radius:       Radius of circle in pixels
    def __init__(self, x, y, radius):
        Circle.__init__(self, x, y, radius, (100,100,100))
        self._on = False    # starts off
    
    # Turn on LED
    def on(self):
        self._on = True
        self.fill_color = (255,200,0)
    
    # Turn off LED
    def off(self):
        self._on = False
        self.fill_color = (100,100,100)
        
    # Test if LED is on
    def is_on(self):
        return self._on
    
    # Process a command meant for LED
    def process(self, cmd):
        if cmd == 'on':
            self.on()
            return {'success':True, 'msg':''}
        elif cmd == 'off':
            self.off()
            return {'success':True, 'msg':''}
        else:
            return {'success':False, 'msg':f"Command {cmd} not understood by LED at Pin {self.num}"}

# SSD1306_I2C simulator (OLED)
# Implemented as a bitmap
class SSD1306_I2C(Shape):
    # x:        y-location
    # y:        y-location
    # width:    pixels wide
    # height:   pixels high
    def __init__(self, x, y, width, height):
        Shape.__init__(self)
        # Double-buffer OLED to stop flicker
        self.buff1 = pygame.Surface((width,height)) #, pygame.SRCALPHA)
        self.buff2 = pygame.Surface((width,height)) #, pygame.SRCALPHA)
        self.rect  = pygame.Rect(x, y, width, height)  # Display location
        self.font  = pygame.font.Font(pygame.font.get_default_font(), 9)
        self.buff2.fill((0,0,0))
    
    # Draw buffer bitmap to surface
    def draw(self, surface):
        surface.blit(self.buff1, self.rect)

    # True if given point is in the shape
    def contains(self, x, y):
        return self.rect.collidepoint(x, y)

    # Fill buffer with val
    def fill(self, val):
        # Fill OLED pixels with val (0 clears)
        val = round(val*255, 0)
        if val < 0: val = 0
        if val > 255: val = 255
        # Update internal buffer, not being displayed
        self.buff2.fill((val,val,val))
    
    # Draw a rectangle outline on the buffer
    def rect_(self, x, y, w, h, val):
        val = round(val*255, 0)
        if val < 0: val = 0
        if val > 255: val = 255
        # Update internal buffer, not being displayed
        pygame.draw.rect(self.buff2, (val,val,val), (x, y, w, h), 1, border_radius=1)
        # pygame.gfxdraw.rectangle(self.buff2, (x, y, w, h), (val,val,val))
    
    # Draw a filled rectangle on the surface
    def fill_rect(self, x, y, w, h, val):
        val = round(val*255, 0)
        if val < 0: val = 0
        if val > 255: val = 255
        # Update internal buffer, not being displayed
        self.buff2.fill((val,val,val), (x, y, w, h), special_flags=pygame.BLEND_RGBA_ADD)
        # pygame.gfxdraw.box(self.buff2, (x, y, w+1, h+1), (val,val,val))

    # Illuminate a single pixel
    def pixel(self, x, y, val):
        val = round(val*255, 0)
        if val < 0: val = 0
        if val > 255: val = 255
        self.buff2.set_at((x, y), (val,val,val))
    
    # Draw text on the buffer
    def text(self, text, col, row, antialias=True):
        # Render text at pixel row, col with val
        # Update internal buffer, not being displayed
        rendered = self.font.render(text, antialias, (255,255,255))
        self.buff2.blit(rendered,[col, row])
    
    # Flip the buffer to show
    def show(self):
        # Time to show, swap bitmap buffers
        self.buff1, self.buff2 = self.buff2, self.buff1
    
    # Process command sent to OLED
    def process(self, cmd):
        if cmd['msg'] == 'fill':
            self.fill( cmd['val'] )
            return {'success':True, 'msg':''}
        elif cmd['msg'] == 'text':
            self.text( cmd['text'], cmd['col'], cmd['row'] )
            return {'success':True, 'msg':''}
        elif cmd['msg'] == 'rect':
            self.rect_( cmd['x'], cmd['y'], cmd['width'], cmd['height'], cmd['val'] )
            return {'success':True, 'msg':''}
        elif cmd['msg'] == 'fill_rect':
            self.fill_rect( cmd['x'], cmd['y'], cmd['width'], cmd['height'], cmd['val'] )
            return {'success':True, 'msg':''}
        elif cmd['msg'] == 'pixel':
            self.pixel( cmd['x'], cmd['y'], cmd['val'] )
            return {'success':True, 'msg':''}
        elif cmd['msg'] == 'show':
            self.show()
            return {'success':True, 'msg':''}
        else:
            return {'success':False, 'msg':f"Command {cmd} not understood by SSD1306_I2C"}

# === Main function
def main():

    # Network address on which to receive remote commands over UDP
    addr = ('127.0.0.1', 9999)

    # Digital components attached to each pin.
    # Index is pin number. 
    pin = [None]*41

    # Use UDP to send messages. Avoids the complications of stream oriented TCP socket connections.
    rsock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    rsock.bind(addr)
    rsock.setblocking(0)

    # Set up pygame
    pygame.init()

    size   = width, height = 1000, 278
    screen = pygame.display.set_mode(size=size)
    pygame.display.set_caption('TCNJ Engineering Breadboard Simulator')

    # === Create Objects on Breadboard and save at Pin number
    # bb      = Image(0, 0, "breadboard.gif")
    img     = BytesIO(base64.b64decode(board_b64))
    bb      = Image(0, 0, img)
    pin[6]  = LED(300, 139, 10)
    pin[26] = Button(100, 139, 30, (255, 255, 255))

    oled    = SSD1306_I2C(600, 150, 128, 64)
    oled.fill(0)

    #slider  = VSlider(820, 10, 30, 250)
    lsm6dsox= LSM6DSOX()
    
    # List of shape objects to draw
    shapes = [bb, pin[6], pin[26], oled, lsm6dsox] #slider]

    # === Main loop
    keep_running = True
    while keep_running:
        
        # == Handle pygame events
        for evt in pygame.event.get():
            # Get current mouse position
            x, y = pygame.mouse.get_pos()

            if evt.type == pygame.QUIT:
                keep_running = False

            elif evt.type == pygame.MOUSEBUTTONDOWN:            
                # Loop backwards to find top-most hit. 
                for s in reversed(shapes):      # The reversed function is efficient. No copy is made.
                    if s._handles_events and s.contains(x, y):
                        s.onmousepressed(x, y, evt.button)
                        break
            
            elif evt.type == pygame.MOUSEBUTTONUP:
                # Loop backwards to find top-most hit. 
                for s in reversed(shapes):      # The reversed function is efficient. No copy is made.
                    if s._handles_events and s.contains(x, y):
                        s.onmousereleased(x, y, evt.button)
                        break
            
            elif evt.type == pygame.MOUSEMOTION:
                for s in reversed(shapes):      # The reversed function is efficient. No copy is made.
                    if s._handles_events and s.contains(x, y):
                        s.onmousemoved(x, y, evt.buttons)
                        break
            
        # == Handle messages sent over network
        try:
            bytes, addr = rsock.recvfrom(1024)          # Receive buffer size is 1024 bytes
            cmd = json.loads(bytes.decode())            # Decode message
            
            if cmd['to'] == 'pin':                      # Route message
                try:
                    num   = int(cmd['num'])             # Get Pin number
                    msg   = pin[num].process(cmd['msg'])# Ask Pin to process message and get response
                    resp  = json.dumps(msg)             # Serialize response
                    bytes = resp.encode('utf-8')        # Encode as bytes
                    rsock.sendto(bytes, addr)           # Encode and send response
                except Exception as e:
                    msg   = {'to':addr, 'success':False, 'msg':str(e)}
                    resp  = json.dumps(msg)             # Serialize response
                    bytes = resp.encode('utf-8')        # Encode as bytes
                    rsock.sendto(bytes, addr)           # Encode and send response
            
            elif cmd['to'] == 'oled':
                try:
                    msg   = oled.process(cmd)
                    resp  = json.dumps(msg)             # Serialize response
                    bytes = resp.encode('utf-8')        # Encode as bytes
                    rsock.sendto(bytes, addr)           # Encode and send response
                except Exception as e:
                    msg   = {'to':addr, 'success':False, 'msg':str(e)}
                    resp  = json.dumps(msg)             # Serialize response
                    bytes = resp.encode('utf-8')        # Encode as bytes
                    rsock.sendto(bytes, addr)           # Encode and send response

            elif cmd['to'] == 'lsm6dsox':
                try:
                    msg   = lsm6dsox.process(cmd)
                    resp  = json.dumps(msg)             # Serialize response
                    bytes = resp.encode('utf-8')        # Encode as bytes
                    rsock.sendto(bytes, addr)           # Encode and send response
                except Exception as e:
                    msg   = {'to':addr, 'success':False, 'msg':str(e)}
                    resp  = json.dumps(msg)             # Serialize response
                    bytes = resp.encode('utf-8')        # Encode as bytes
                    rsock.sendto(bytes, addr)           # Encode and send response
        
        except socket.error:
            ...    # meh
        except Exception as e:
            print(str(e))             

        # == Draw all objects
        screen.fill((0,0,0))
        for s in shapes: s.draw(screen)
        pygame.display.flip()       # This method is faster when the whole buffer is replaced
        # pygame.display.update()
        
        # Pause
        pygame.time.wait(10)

    # Shut down
    pygame.quit()
    sys.exit()

# === Board image in base64
board_b64 = b""

if __name__ == '__main__': main()
